name: Docker Build and Release

on:
  push:
    branches:
      - master
    tags:
      - '*'
  schedule:
    - cron: '0 3 * * *'  # Runs daily at 03:00 UTC

env:
  REGISTRY: docker.io  # Change to Docker Hub if needed
  IMAGE_NAME: brunofin/cups
  PLATFORMS: linux/amd64,linux/arm/v7,linux/arm64/v8

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [amd64, arm64v8]
        include:
          - arch: amd64
            platform: linux/amd64
          - arch: arm64v8
            platform: linux/arm64/v8

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Build and Push Docker Image (${{ matrix.arch }})
        run: |
          docker buildx build \
            --platform=${{ matrix.platform }} \
            --build-arg ARCH=${{ matrix.arch }} \
            --build-arg BUILD_DATE=$(date -u +"%Y-%m-%dT%H:%M:%SZ") \
            --build-arg VCS_REF=${{ github.sha }} \
            -t ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}-${{ matrix.arch }} \
            --push .

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Login to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Create and Push Multi-Arch Manifest
        run: |
          docker manifest create ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest \
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}-amd64 \
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}-arm32v7 \
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}-arm64v8

          docker manifest annotate --arch amd64 ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}-amd64
          docker manifest annotate --arch arm --variant v7 ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}-arm32v7
          docker manifest annotate --arch arm64 --variant v8 ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}-arm64v8

          docker manifest push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
